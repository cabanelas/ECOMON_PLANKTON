################################################################
#picking top 9
cop_l_top <- cop_l %>%
filter(taxa == "ctyp" | taxa== "calfin" | taxa == "pseudo" |
taxa == "tlong" | taxa == "para" | taxa == "mlucens" |
taxa == "oithspp" | taxa == "acarspp"  | taxa == "cham")
cop_l_top_g_s <- cop_l_top %>%
group_by(taxa, year, Type, season) %>%
summarize(MeanT = mean(ind_10m2, na.rm = TRUE))
# --- 6) relative abund bar plot small vs large copepods  -----
cop_l_top <- cop_l_top %>%
mutate(size = case_when(TAXA_NAME == "Calanus finmarchicus" ~ "Large",
TAXA_NAME == "Centropages hamatus" ~ "Small",
TAXA_NAME == "Centropages typicus" ~ "Small",
#Taxon == "Clausocalanus arcuicornis" ~ "Small",
TAXA_NAME == "Metridia lucens" ~ "Small",
#Taxon == "Nannocalanus minor" ~ "Small",
TAXA_NAME == "Paracalanus parvus" ~ "Small",
TAXA_NAME == "Pseudocalanus spp." ~ "Small",
TAXA_NAME == "Temora longicornis" ~ "Small",
TAXA_NAME == "Acartia spp." ~ "Small",
TAXA_NAME == "Oithona spp." ~ "Small"))
################################################################
# top 4
cop_l_top4 <- cop_l %>%
filter(taxa == "ctyp" | taxa== "calfin" | taxa == "pseudo" |
taxa == "tlong")
################################################################
# top 20 overall all spp
zp_o_top20 <- zp_o %>%
filter(taxa == "ctyp" | taxa == "calfin" | taxa == "pseudo" |
taxa == "echino" | taxa == "penilia" | taxa == "tlong" |
taxa == "gas" | taxa == "larvaceans" | taxa == "para" |
taxa == "mlucens" | taxa == "chaeto" | taxa == "salps" |
taxa == "spirspp" | taxa == "oithspp" | taxa == "thecos" |
taxa == "evadnespp" | taxa == "cirr" | taxa == "acarspp" |
taxa == "cham" | taxa == "hyper")
################################################################
zp_o_top20a <- zp_o_top20 %>%
group_by(TAXA_NAME, year, season, Type) %>%
summarize(MeanT = mean(ind_10m2, na.rm = TRUE))
################################################################
zp_o_top20b <- zp_o_top20 %>%
group_by(TAXA_NAME, year, season, Type, Name) %>%
summarize(MeanT = mean(ind_10m2, na.rm = TRUE))
zp_line <- list()
for(TAXA_NAME_ in taxas) {
zp_line[[TAXA_NAME_]] = ggplot(zp_o_top20b %>% filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Name, scales = "free", labeller = labeller(Type = as_labeller(facet_titles))) +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black",
size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold",
size = 12)) +
scale_x_continuous(expand = expansion(mult = c(0.01,0.01)))
print(zp_line[[TAXA_NAME_]])
#ggsave(zp_line[[TAXA_NAME_]], file=paste0("plot_", TAXA_NAME_, ".png"))
}
zp_o_top20b
zp_line[[TAXA_NAME_]] = ggplot(zp_o_top20b %>% filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Name, scales = "free") +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black",
size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold",
size = 12)) +
scale_x_continuous(expand = expansion(mult = c(0.01,0.01)))
for(TAXA_NAME_ in taxas) {
zp_line[[TAXA_NAME_]] = ggplot(zp_o_top20b %>% filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Name, scales = "free") +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black",
size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold",
size = 12)) +
scale_x_continuous(expand = expansion(mult = c(0.01,0.01)))
print(zp_line[[TAXA_NAME_]])
#ggsave(zp_line[[TAXA_NAME_]], file=paste0("plot_", TAXA_NAME_, ".png"))
}
for(TAXA_NAME_ in taxas) {
zp_line[[TAXA_NAME_]] = ggplot(zp_o_top20b %>% filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Type, scales = "free") +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black",
size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold",
size = 12)) +
scale_x_continuous(expand = expansion(mult = c(0.01,0.01)))
print(zp_line[[TAXA_NAME_]])
#ggsave(zp_line[[TAXA_NAME_]], file=paste0("plot_", TAXA_NAME_, ".png"))
}
View(zp_o_top20b)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
ggplot(zp_o_top20b %>% filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors)
for(TAXA_NAME_ in taxas) {
zp_line[[TAXA_NAME_]] = ggplot(zp_o_top20b %>%
filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Name, scales = "free") +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black",
size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold",
size = 12)) +
scale_x_continuous(expand = expansion(mult = c(0.01,0.01)))
print(zp_line[[TAXA_NAME_]])
#ggsave(zp_line[[TAXA_NAME_]], file=paste0("plot_", TAXA_NAME_, ".png"))
}
head(zp_o_top20b)
for (TAXA_NAME_ in taxas) {
data_sub <- zp_o_top20b %>% filter(TAXA_NAME == TAXA_NAME_)
if (nrow(data_sub) == 0) {
message(paste("Skipping", TAXA_NAME_, "- no data available"))
next
}
zp_line[[TAXA_NAME_]] <- ggplot(data_sub,
aes(x = year, y = MeanT, color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Name, scales = "free") +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black", size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold", size = 12)
) +
scale_x_continuous(expand = expansion(mult = c(0.01, 0.01)))
print(zp_line[[TAXA_NAME_]])
# ggsave(zp_line[[TAXA_NAME_]], file = paste0("plot_", TAXA_NAME_, ".png"))
}
unique(zp_o_top20b$TAXA_NAME)
taxas1 <- unique(zp_o_top20b$TAXA_NAME)
zp_line <- list()
for(TAXA_NAME_ in taxas1) {
zp_line[[TAXA_NAME_]] = ggplot(zp_o_top20b %>%
filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
geom_line(size = 1, alpha = 0.7) +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Name, scales = "free") +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black",
size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold",
size = 12)) +
scale_x_continuous(expand = expansion(mult = c(0.01,0.01)))
print(zp_line[[TAXA_NAME_]])
#ggsave(zp_line[[TAXA_NAME_]], file=paste0("plot_", TAXA_NAME_, ".png"))
}
for(TAXA_NAME_ in taxas1) {
zp_line[[TAXA_NAME_]] = ggplot(zp_o_top20b %>%
filter(TAXA_NAME == TAXA_NAME_),
aes(x=year, y = MeanT,
color = season)) +
#geom_line(size = 1, alpha = 0.7) +
geom_bar(stat = "identity") +
ylab(expression("Ind/" ~ m^{2})) +
scale_color_manual(values = mycolors) +
facet_wrap(~Name, scales = "free") +
ggtitle(paste0(" ", TAXA_NAME_)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 14),
axis.text.x = element_text(color = "black",
size = 15),
axis.text.y = element_text(color = "black", size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(color = "black", face = "bold",
size = 12)) +
scale_x_continuous(expand = expansion(mult = c(0.01,0.01)))
print(zp_line[[TAXA_NAME_]])
#ggsave(zp_line[[TAXA_NAME_]], file=paste0("plot_", TAXA_NAME_, ".png"))
}
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
library(ggOceanMaps)
basemap(data = cop_l_top, bathymetry = TRUE) +
geom_point(data = cop_l_top, aes(x = lon, y=lat,
color = as.factor(taxa)))
species_to_plot <- "ctyp"
basemap(data = zp, bathymetry = TRUE) +
geom_point(data = cop_one, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot)) +
theme_minimal()
cop_one <- cop_l_top %>%
filter(taxa == species_to_plot, year == 2015)
basemap(data = zp, bathymetry = TRUE) +
geom_point(data = cop_one, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot)) +
theme_minimal()
basemap(data = zp, bathymetry = TRUE) +
geom_point(data = cop_one, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot year)) +
basemap(data = zp, bathymetry = TRUE) +
geom_point(data = cop_one, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot, year)) +
theme_minimal()
basemap(data = zp, bathymetry = TRUE) +
geom_point(data = cop_one, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot, "in", year)) +
theme_minimal()
basemap(data = zp, bathymetry = TRUE) +
geom_point(data = cop_one, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot, "in 2015")) +
theme_minimal()
cop_l_topNAN <- cop_l_top %>% filter(ind_10m2 > 0)
basemap(data = cop_l_topNAN, bathymetry = TRUE) +
geom_point(data = cop_l_topNAN, aes(x = lon, y=lat,
color = as.factor(taxa))) +
scale_color_manual(values = mycolors)
unique(zp_o$taxa)
species_to_plot <- "larvaceans"
species_to_plot <- "larvaceans"
zp_larvacean <- zp %>%
filter(taxa == species_to_plot)
zp_larvacean <- zp_o %>%
filter(taxa == species_to_plot)
basemap(data = zp_o, bathymetry = TRUE) +
geom_point(data = zp_larvacean, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot, "in 2015")) +
theme_minimal()
zp_larvacean <- zp_o %>%
filter(taxa == species_to_plot, year == 2018)
basemap(data = zp_o, bathymetry = TRUE) +
geom_point(data = zp_larvacean, aes(x = lon, y = lat,
size = ind_10m2,  # use actual abundance column
color = season),
alpha = 0.7) +
scale_size_continuous(name = "Ind/10m²", range = c(1, 8)) +
ggtitle(paste("Spatial distribution of", species_to_plot, "in 2015")) +
theme_minimal()
unique_species <- unique(cop_l_topNAN$taxa)
# Loop through each species and create a plot
for (species in unique_species) {
# Subset data for the current species
species_data <- subset(cop_l_topNAN, taxa == species)
# Create the plot
plot <- basemap(data = cop_l_topNAN, bathymetry = TRUE) +
geom_point(data = species_data, aes(x = lon, y = lat,
color = as.factor(taxa),
size = volume_1m2)) +
scale_color_manual(values = mycolors) +
ggtitle(paste("Species:", species)) +
theme_minimal()
# Print the plot (or save it to a file)
print(plot)
}
oith <- cop_l_topNAN %>%
filter(taxa == "oithspp")
basemap(data = oith, bathymetry = TRUE) +
geom_point(data = oith, aes(x = lon, y=lat, size = ind_10m2,
color = year))
years <- unique(oith$year)
# I DONT THINK THIS IS PLOTTING RIGHT
# Loop over each year
for (year in years) {
# Subset the data for the current year
data_year <- subset(oith, year == year)
# Check if the data for the current year is empty
if(nrow(data_year) == 0) {
print(paste("No data for year", year))
next
}
print(paste("Year:", year, "Number of rows:", nrow(data_year)))
print(summary(data_year))
# Create the plot for the current year
p <- basemap(data = data_year, bathymetry = TRUE) +
geom_point(data = data_year, aes(x = lon, y = lat, size = ind_10m2)) +
labs(title = paste("Year:", year))
# Print the plot
print(p)
}
ggplot(cop_l, aes(year, ind_10m2, fill = taxa, color = taxa)) +
geom_col(position = "fill") +
facet_wrap(~Type) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors) +
ylab(expression("Relative Abundance")) +
theme_bw() +
scale_fill_manual(values = mycolors) +
theme(legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14,
color = "black"),
axis.text.x = element_text(color = "black",
size = 12,
angle = 45, hjust = 1
),
strip.text = element_text(color = "black",
size = 12,
face = "bold"),
axis.ticks.x = element_blank(),
axis.ticks.length = unit(0.2,"cm")) +
scale_y_continuous(expand = expansion(mult = c(0,0.01)), labels=scales::percent)
ggplot(cop_l, aes(year, ind_10m2, fill = taxa, color = taxa)) +
geom_col(position = "fill") +
facet_wrap(~Type) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors) +
ylab(expression("Relative Abundance")) +
theme_bw() +
#scale_fill_manual(values = mycolors) +
theme(legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14,
color = "black"),
axis.text.x = element_text(color = "black",
size = 12,
angle = 45, hjust = 1
),
strip.text = element_text(color = "black",
size = 12,
face = "bold"),
axis.ticks.x = element_blank(),
axis.ticks.length = unit(0.2,"cm")) +
scale_y_continuous(expand = expansion(mult = c(0,0.01)), labels=scales::percent)
ggplot(cop_l, aes(year, ind_10m2, fill = taxa, color = taxa)) +
geom_col(position = "fill") +
facet_wrap(~Type) +
#scale_fill_manual(values = mycolors) +
#scale_color_manual(values = mycolors) +
ylab(expression("Relative Abundance")) +
theme_bw() +
#scale_fill_manual(values = mycolors) +
theme(legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14,
color = "black"),
axis.text.x = element_text(color = "black",
size = 12,
angle = 45, hjust = 1
),
strip.text = element_text(color = "black",
size = 12,
face = "bold"),
axis.ticks.x = element_blank(),
axis.ticks.length = unit(0.2,"cm")) +
scale_y_continuous(expand = expansion(mult = c(0,0.01)), labels=scales::percent)
library(maps)
US <- map_data("usa")
zp_o %>%
#distinct(Location, Longitude, Latitude) %>%
ggplot() +
geom_polygon(data = US, aes(x=long, y = lat, group = group),
fill="grey", alpha=0.3, colour = "black") +
geom_point(aes(x = lon, y = lat), colour = "steelblue") +
coord_map() +
labs(x = NULL, y = NULL, size = NULL, title = "Study sites",
subtitle = "(2002 - 2020)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
zp_o %>%
#distinct(Location, Longitude, Latitude) %>%
ggplot() +
geom_polygon(data = US, aes(x=long, y = lat, group = group),
fill="grey", alpha=0.3, colour = "black") +
geom_point(aes(x = lon, y = lat), colour = "steelblue") +
coord_map() +
labs(x = NULL, y = NULL, size = NULL, title = "Study sites",
subtitle = "(2002 - 2020)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
zp_o %>%
#distinct(Location, Longitude, Latitude) %>%
ggplot() +
geom_polygon(data = US, aes(x=long, y = lat, group = group),
fill="grey", alpha=0.3, colour = "black") +
geom_point(aes(x = lon, y = lat), colour = "steelblue") +
coord_map() +
labs(x = NULL, y = NULL, size = NULL, title = "Study sites",
subtitle = "(2002 - 2020)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
